{"ast":null,"code":"var _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\components\\\\PostList\\\\PostList.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { List, PostBody } from './PostListStyles';\nimport { Card } from '../Card';\nimport { Modal } from '../Modal';\nimport { Form } from '../Form';\nimport { Buttons } from '../Buttons';\nimport { BASE_URL } from '../../utils/constants';\nexport const PostList = ({\n  postList\n}) => {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postList);\n  const {\n    0: isModalOpen,\n    1: setIsModalOpen\n  } = useState(false);\n  const {\n    0: currentPost,\n    1: setCurrentPost\n  } = useState(null);\n\n  const handleClickDelete = async id => {\n    await axios.delete(`${BASE_URL}/${id}`).then(() => {// setPosts(postList.filter((post) => post.id !== id));\n    });\n    await axios.get(BASE_URL).then(({\n      data\n    }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const handleClickEdit = id => {\n    setIsModalOpen(true);\n    setCurrentPost(postList.find(post => post.id === id));\n  };\n\n  const editPost = async post => {\n    await axios({\n      method: 'PUT',\n      url: `${BASE_URL}/${currentPost.id}`,\n      data: post\n    }).then(() => {\n      setIsModalOpen(false);\n      setCurrentPost(null);\n    });\n    await axios.get(BASE_URL).then(({\n      data\n    }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, posts.map(({\n    id,\n    title,\n    body\n  }) => __jsx(Card, {\n    key: id,\n    title: title,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(Buttons, {\n    onEdit: () => handleClickEdit(id),\n    onDelete: () => handleClickDelete(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), __jsx(PostBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, body)))), isModalOpen && __jsx(Modal, {\n    onClose: closeModal,\n    title: currentPost.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmitForm: editPost,\n    currentPost: currentPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["F:/TestTasks/next-js/components/PostList/PostList.tsx"],"names":["React","useState","axios","List","PostBody","Card","Modal","Form","Buttons","BASE_URL","PostList","postList","posts","setPosts","isModalOpen","setIsModalOpen","currentPost","setCurrentPost","handleClickDelete","id","delete","then","get","data","reverse","handleClickEdit","find","post","editPost","method","url","closeModal","map","title","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { List, PostBody } from './PostListStyles';\nimport { Card } from '../Card';\nimport { Modal } from '../Modal';\nimport { Form } from '../Form';\nimport { Buttons } from '../Buttons';\nimport { BASE_URL } from '../../utils/constants';\n\nexport const PostList = ({ postList }) => {\n\n  const [posts, setPosts] = useState(postList);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentPost, setCurrentPost] = useState(null);\n\n  const handleClickDelete = async (id) => {\n    await axios.delete(`${BASE_URL}/${id}`).then(() => {\n      // setPosts(postList.filter((post) => post.id !== id));\n    });\n    await axios.get(BASE_URL).then(({ data }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const handleClickEdit = (id) => {\n    setIsModalOpen(true);\n    setCurrentPost(postList.find((post) => post.id === id));\n  };\n\n  const editPost = async (post) => {\n    await axios({\n      method: 'PUT',\n      url: `${BASE_URL}/${currentPost.id}`,\n      data: post,\n    }).then(() => {\n      setIsModalOpen(false);\n      setCurrentPost(null);\n    });\n\n    await axios.get(BASE_URL).then(({ data }) => {\n      setPosts(data.reverse());\n    });\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <List>\n        {posts.map(({ id, title, body }) => (\n          <Card key={id} title={title} id={id}>\n            <Buttons\n              onEdit={() => handleClickEdit(id)}\n              onDelete={() => handleClickDelete(id)}\n            />\n            <PostBody>{body}</PostBody>\n          </Card>\n        ))}\n      </List>\n      {isModalOpen && (\n        <Modal onClose={closeModal} title={currentPost.title}>\n          <Form onSubmitForm={editPost} currentPost={currentPost} />\n        </Modal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}