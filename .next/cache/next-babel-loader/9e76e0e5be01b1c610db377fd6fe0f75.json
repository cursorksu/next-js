{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\pages\\\\posts\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport { Layout } from '../../components/Layout';\nimport { Card } from '../../components/Card';\nimport { Title, PostWrapper } from '../../components/Card/CardStyles';\n\nvar PostPage = function PostPage(_ref) {\n  var post = _ref.post;\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(PostWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    heading: post.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, post.body), post.comments.length > 0 && __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 40\n    }\n  }, \"Comments\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, post.comments.map(function (item) {\n    return __jsx(\"li\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, item.body);\n  })))));\n};\n\nPostPage.getInitialProps = function _callee(context) {\n  var id, postWithComments, post;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(id, \"?_embed=comments\")));\n\n        case 3:\n          postWithComments = _context.sent;\n          post = postWithComments.data;\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default PostPage;","map":{"version":3,"sources":["F:/TestTasks/next-js/pages/posts/[id].tsx"],"names":["React","axios","Layout","Card","Title","PostWrapper","PostPage","post","title","body","comments","length","map","item","id","getInitialProps","context","query","get","postWithComments","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,kCAAnC;;AAaA,IAAMC,QAEL,GAAG,SAFEA,QAEF,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAChB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,IAAI,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,IAAI,CAACE,IAAX,CADF,EAEGF,IAAI,CAACG,QAAL,CAAcC,MAAd,GAAuB,CAAvB,IAA4B,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF/B,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACG,QAAL,CAAcE,GAAd,CAAkB,UAACC,IAAD;AAAA,WACjB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACJ,IAAxB,CADiB;AAAA,GAAlB,CADH,CAHF,CADF,CADF,CADF;AAeD,CAlBD;;AAoBAH,QAAQ,CAACS,eAAT,GAA2B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBF,UAAAA,EADiB,GACVE,OAAO,CAACC,KADE,CACjBH,EADiB;AAAA;AAAA,2CAEMb,KAAK,CAACiB,GAAN,kDACaJ,EADb,sBAFN;;AAAA;AAEnBK,UAAAA,gBAFmB;AAKnBZ,UAAAA,IALmB,GAKZY,gBAAgB,CAACC,IALL;AAAA,2CAOlB;AACLb,YAAAA,IAAI,EAAJA;AADK,WAPkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAYA,eAAeD,QAAf","sourcesContent":["import React, { FC } from 'react';\nimport { NextPageContext } from 'next';\nimport axios from 'axios';\nimport { Layout } from '../../components/Layout';\nimport { Card } from '../../components/Card';\nimport { Title, PostWrapper } from '../../components/Card/CardStyles';\n\ninterface Post {\n  id: string | number;\n  title: string;\n  body: string;\n  comments?: Comment[];\n}\n\ninterface Props {\n  post: Post;\n}\n\nconst PostPage: FC<Props> & {\n  getInitialProps?(context: NextPageContext): Promise<Props> | Props;\n} = ({ post }) => {\n  return (\n    <Layout>\n      <PostWrapper>\n        <Card heading={post.title}>\n          <div>{post.body}</div>\n          {post.comments.length > 0 && <Title>Comments</Title>}\n          <ul>\n            {post.comments.map((item) => (\n              <li key={item.id}>{item.body}</li>\n            ))}\n          </ul>\n        </Card>\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nPostPage.getInitialProps = async (context): Promise<{ post: Post }> => {\n  const { id } = context.query;\n  const postWithComments = await axios.get(\n    `https://simple-blog-api.crew.red/posts/${id}?_embed=comments`,\n  );\n  const post = postWithComments.data;\n\n  return {\n    post,\n  };\n};\n\nexport default PostPage;\n"]},"metadata":{},"sourceType":"module"}