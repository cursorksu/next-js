{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Layout } from \"../components/Layout\";\nimport { PostList } from \"../components/PostList\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../utils/constants\";\nexport default function Index() {\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      isModalOpen = _useState2[0],\n      setIsModalOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentPost = _useState3[0],\n      setCurrentPost = _useState3[1];\n\n  var getPosts = function getPosts() {\n    return _regeneratorRuntime.async(function getPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getPosts().then(function (_ref) {\n      var data = _ref.data;\n      var postList = data.reverse();\n      console.log(postList);\n      setPosts(postList);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {});\n  }, []);\n\n  var handleClickEdit = function handleClickEdit(id) {\n    setIsModalOpen(true);\n    setCurrentPost(posts.find(function (post) {\n      return post.id === id;\n    }));\n  };\n\n  var editPost = function editPost(post) {\n    axios({\n      method: 'PUT',\n      url: \"\".concat(BASE_URL, \"/\").concat(currentPost.id),\n      data: post\n    }).then(function () {\n      setPosts(posts.map(function (item) {\n        if (item.id === post.id) {\n          return post;\n        }\n\n        return item;\n      }));\n      setIsModalOpen(false);\n      setCurrentPost(null);\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(PostList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["F:/TestTasks/next-js/pages/index.js"],"names":["React","useEffect","useState","Layout","PostList","axios","BASE_URL","Index","posts","setPosts","isModalOpen","setIsModalOpen","currentPost","setCurrentPost","getPosts","get","then","data","postList","reverse","console","log","error","handleClickEdit","id","find","post","editPost","method","url","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAKA,eAAe,SAASC,KAAT,GAAiB;AAAA,kBACJL,QAAQ,CAAC,EAAD,CADJ;AAAA,MACvBM,KADuB;AAAA,MAChBC,QADgB;;AAAA,mBAEQP,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEvBQ,WAFuB;AAAA,MAEVC,cAFU;;AAAA,mBAGQT,QAAQ,CAAC,IAAD,CAHhB;AAAA,MAGvBU,WAHuB;AAAA,MAGVC,cAHU;;AAK9B,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFT,KAAK,CACjBU,GADY,CACRT,QADQ,CADE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAKAL,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,QAAQ,GAAGE,IAAX,CAAgB,gBAAc;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAC5B,UAAMC,QAAQ,GAAGD,IAAI,CAACE,OAAL,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAT,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,KAJD,WAKO,UAAUI,KAAV,EAAiB;AACtBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KAPD,aAQS,YAAY,CAAE,CARvB;AASD,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAAQ;AAC9Bb,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,cAAc,CAACL,KAAK,CAACiB,IAAN,CAAW,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACF,EAAL,KAAYA,EAAtB;AAAA,KAAX,CAAD,CAAd;AACD,GAHD;;AAKA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACD,IAAD,EAAU;AACzBrB,IAAAA,KAAK,CAAC;AACJuB,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,YAAKvB,QAAL,cAAiBM,WAAW,CAACY,EAA7B,CAFC;AAGJP,MAAAA,IAAI,EAAES;AAHF,KAAD,CAAL,CAIGV,IAJH,CAIQ,YAAM;AACZP,MAAAA,QAAQ,CAACD,KAAK,CAACsB,GAAN,CAAU,UAAAC,IAAI,EAAI;AACzB,YAAGA,IAAI,CAACP,EAAL,KAAYE,IAAI,CAACF,EAApB,EAAuB;AACrB,iBAAOE,IAAP;AACD;;AAED,eAAOK,IAAP;AACD,OANQ,CAAD,CAAR;AAOApB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAdD;AAeD,GAhBD;;AAkBA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Layout } from \"../components/Layout\";\r\nimport { PostList } from \"../components/PostList\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../utils/constants\";\r\n\r\n\r\n\r\n\r\nexport default function Index() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentPost, setCurrentPost] = useState(null);\r\n  \r\n  const getPosts = async () => {\r\n    return await axios\r\n    .get(BASE_URL);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts().then(({ data }) => {\r\n      const postList = data.reverse();\r\n      console.log(postList);\r\n      setPosts(postList);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n    .finally(function () {});\r\n  }, []);\r\n\r\n  const handleClickEdit = (id) => {\r\n    setIsModalOpen(true);\r\n    setCurrentPost(posts.find((post) => post.id === id));\r\n  };\r\n\r\n  const editPost = (post) => {\r\n    axios({\r\n      method: 'PUT',\r\n      url: `${BASE_URL}/${currentPost.id}`,\r\n      data: post,\r\n    }).then(() => {\r\n      setPosts(posts.map(item => {\r\n        if(item.id === post.id){\r\n          return post;\r\n        }\r\n\r\n        return item;\r\n      }));\r\n      setIsModalOpen(false);\r\n      setCurrentPost(null);\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <Layout>\r\n      <PostList />\r\n    </Layout>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}