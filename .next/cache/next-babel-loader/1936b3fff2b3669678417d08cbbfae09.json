{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\components\\\\PostList\\\\PostList.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios'; // @ts-ignore\n\nimport { List, PostBody } from './PostListStyles';\nimport { Card } from '../Card';\nimport { Modal } from '../Modal';\nimport { Form } from '../Form';\nimport { Buttons } from '../Buttons';\nimport { BASE_URL } from '../../utils/constants';\nexport var PostList = function PostList(_ref) {\n  var postList = _ref.postList;\n  console.log(postList);\n\n  var _useState = useState(postList),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      isModalOpen = _useState2[0],\n      setIsModalOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentPost = _useState3[0],\n      setCurrentPost = _useState3[1];\n\n  var deletePost = function deletePost(id) {\n    return _regeneratorRuntime.async(function deletePost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios[\"delete\"](\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL).then(function (_ref2) {\n              var data = _ref2.data;\n              setPosts(data.reverse());\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleClickDelete = function handleClickDelete(id) {\n    deletePost(id).then(function () {\n      setPosts(posts.filter(function (post) {\n        return post.id !== id;\n      }));\n    });\n  };\n\n  var handleClickEdit = function handleClickEdit(id) {\n    setIsModalOpen(true);\n    setCurrentPost(postList.find(function (post) {\n      return post.id === id;\n    }));\n  };\n\n  var editPost = function editPost(post) {\n    return _regeneratorRuntime.async(function editPost$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              method: 'PUT',\n              url: \"\".concat(BASE_URL, \"/\").concat(currentPost.id),\n              data: post\n            }).then(function () {\n              setIsModalOpen(false);\n              setCurrentPost(null);\n            }));\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL).then(function (_ref3) {\n              var data = _ref3.data;\n              setPosts(data.reverse());\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var closeModal = function closeModal() {\n    setIsModalOpen(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, posts.map(function (_ref4) {\n    var id = _ref4.id,\n        title = _ref4.title,\n        body = _ref4.body;\n    return __jsx(Card, {\n      key: id,\n      title: title,\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, __jsx(Buttons, {\n      onEdit: function onEdit() {\n        return handleClickEdit(id);\n      },\n      onDelete: function onDelete() {\n        return handleClickDelete(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), __jsx(PostBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, body));\n  })), isModalOpen && __jsx(Modal, {\n    onClose: closeModal,\n    title: currentPost.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmitForm: editPost,\n    currentPost: currentPost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })));\n};\n\nPostList.getInitialProps = function _callee() {\n  var res;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(BASE_URL));\n\n        case 2:\n          res = _context3.sent;\n          return _context3.abrupt(\"return\", {\n            posts: res.data.reverse()\n          });\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default PostList;","map":{"version":3,"sources":["F:/TestTasks/next-js/components/PostList/PostList.tsx"],"names":["React","useState","axios","List","PostBody","Card","Modal","Form","Buttons","BASE_URL","PostList","postList","console","log","posts","setPosts","isModalOpen","setIsModalOpen","currentPost","setCurrentPost","deletePost","id","get","then","data","reverse","handleClickDelete","filter","post","handleClickEdit","find","editPost","method","url","closeModal","map","title","body","getInitialProps","res"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n// @ts-ignore\nimport { NextFunctionComponent, NextPage } from 'next';\nimport { List, PostBody } from './PostListStyles';\nimport { Card } from '../Card';\nimport { Modal } from '../Modal';\nimport { Form } from '../Form';\nimport { Buttons } from '../Buttons';\nimport { BASE_URL } from '../../utils/constants';\n\ninterface Props {\n  postList: Post[];\n}\n\nexport const PostList: NextFunctionComponent<Props> = ({ postList }) => {\n  console.log(postList);\n  const [posts, setPosts] = useState(postList);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentPost, setCurrentPost] = useState(null);\n\n  const deletePost = async (id): Promise<void> => {\n    await axios.delete(`https://simple-blog-api.crew.red/posts/${id}`);\n\n    await axios.get(BASE_URL).then(({ data }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const handleClickDelete = (id: string | number): void => {\n    deletePost(id).then(() => {\n      setPosts(posts.filter((post) => post.id !== id));\n    });\n  };\n\n  const handleClickEdit = (id: string | number): void => {\n    setIsModalOpen(true);\n    setCurrentPost(postList.find((post) => post.id === id));\n  };\n\n  const editPost = async (post): Promise<void> => {\n    await axios({\n      method: 'PUT',\n      url: `${BASE_URL}/${currentPost.id}`,\n      data: post,\n    }).then(() => {\n      setIsModalOpen(false);\n      setCurrentPost(null);\n    });\n\n    await axios.get(BASE_URL).then(({ data }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const closeModal = (): void => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <List>\n        {posts.map(({ id, title, body }) => (\n          <Card key={id} title={title} id={id}>\n            <Buttons\n              onEdit={(): void => handleClickEdit(id)}\n              onDelete={(): void => handleClickDelete(id)}\n            />\n            <PostBody>{body}</PostBody>\n          </Card>\n        ))}\n      </List>\n      {isModalOpen && (\n        <Modal onClose={closeModal} title={currentPost.title}>\n          <Form onSubmitForm={editPost} currentPost={currentPost} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nPostList.getInitialProps = async function (): Promise<{ posts: Post[] }> {\n  const res = await axios.get(BASE_URL);\n\n  return {\n    posts: res.data.reverse(),\n  };\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}