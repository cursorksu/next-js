{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Layout } from \"../components/Layout\";\nimport { List, PostBody } from \"./styles/PostStyles\";\nimport { Buttons } from \"../components/Buttons\";\nimport { Card } from \"../components/Card\";\nimport { Modal } from \"../components/Modal\";\nimport { Form } from \"../components/Form\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../utils/constants\";\nexport default function Index() {\n  var _this = this;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      isModalOpen = _useState2[0],\n      setIsModalOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentPost = _useState3[0],\n      setCurrentPost = _useState3[1];\n\n  var getPosts = function getPosts() {\n    return _regeneratorRuntime.async(function getPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getPosts().then(function (_ref) {\n      var data = _ref.data;\n      var postList = data.reverse();\n      console.log(postList);\n      setPosts(postList);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    })[\"finally\"](function () {});\n  }, []);\n\n  var handleClickEdit = function handleClickEdit(id) {\n    setIsModalOpen(true);\n    setCurrentPost(posts.find(function (post) {\n      return post.id === id;\n    }));\n  };\n\n  var editPost = function editPost(post) {\n    axios({\n      method: 'PUT',\n      url: \"\".concat(BASE_URL, \"/\").concat(currentPost.id),\n      data: post\n    }).then(function () {\n      setPosts(posts.map(function (item) {\n        if (item.id === post.id) {\n          return post;\n        }\n\n        return item;\n      }));\n      setIsModalOpen(false);\n      setCurrentPost(null);\n    });\n  };\n\n  var handleClickDelete = function handleClickDelete(id) {\n    axios[\"delete\"](\"\".concat(BASE_URL, \"/\").concat(id)).then(function () {\n      setPosts(posts.filter(function (post) {\n        return post.id !== id;\n      }));\n    });\n  };\n\n  var closeModal = function closeModal() {\n    setIsModalOpen(false);\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, posts.map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title,\n        body = _ref2.body;\n    return __jsx(Card, {\n      key: id,\n      title: title,\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, __jsx(Buttons, {\n      onEdit: function onEdit() {\n        return handleClickEdit(id);\n      },\n      onDelete: function onDelete() {\n        return handleClickDelete(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), __jsx(PostBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, body));\n  })), isModalOpen && __jsx(Modal, {\n    onClose: closeModal,\n    title: currentPost.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmitForm: editPost,\n    currentPost: currentPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["F:/TestTasks/next-js/pages/index.js"],"names":["React","useEffect","useState","Layout","List","PostBody","Buttons","Card","Modal","Form","axios","BASE_URL","Index","posts","setPosts","isModalOpen","setIsModalOpen","currentPost","setCurrentPost","getPosts","get","then","data","postList","reverse","console","log","error","handleClickEdit","id","find","post","editPost","method","url","map","item","handleClickDelete","filter","closeModal","title","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAIA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACJV,QAAQ,CAAC,EAAD,CADJ;AAAA,MACvBW,KADuB;AAAA,MAChBC,QADgB;;AAAA,mBAEQZ,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEvBa,WAFuB;AAAA,MAEVC,cAFU;;AAAA,mBAGQd,QAAQ,CAAC,IAAD,CAHhB;AAAA,MAGvBe,WAHuB;AAAA,MAGVC,cAHU;;AAK9B,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFT,KAAK,CACjBU,GADY,CACRT,QADQ,CADE;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAKAV,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,QAAQ,GAAGE,IAAX,CAAgB,gBAAc;AAAA,UAAXC,IAAW,QAAXA,IAAW;AAC5B,UAAMC,QAAQ,GAAGD,IAAI,CAACE,OAAL,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAT,MAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,KAJD,WAKO,UAAUI,KAAV,EAAiB;AACtBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD,KAPD,aAQS,YAAY,CAAE,CARvB;AASD,GAVQ,EAUN,EAVM,CAAT;;AAYA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAAQ;AAC9Bb,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,cAAc,CAACL,KAAK,CAACiB,IAAN,CAAW,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACF,EAAL,KAAYA,EAAtB;AAAA,KAAX,CAAD,CAAd;AACD,GAHD;;AAKA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACD,IAAD,EAAU;AACzBrB,IAAAA,KAAK,CAAC;AACJuB,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,YAAKvB,QAAL,cAAiBM,WAAW,CAACY,EAA7B,CAFC;AAGJP,MAAAA,IAAI,EAAES;AAHF,KAAD,CAAL,CAIGV,IAJH,CAIQ,YAAM;AACZP,MAAAA,QAAQ,CAACD,KAAK,CAACsB,GAAN,CAAU,UAAAC,IAAI,EAAI;AACzB,YAAGA,IAAI,CAACP,EAAL,KAAYE,IAAI,CAACF,EAApB,EAAuB;AACrB,iBAAOE,IAAP;AACD;;AAED,eAAOK,IAAP;AACD,OANQ,CAAD,CAAR;AAOApB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAdD;AAeD,GAhBD;;AAkBA,MAAMmB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,EAAD,EAAQ;AAChCnB,IAAAA,KAAK,UAAL,WAAgBC,QAAhB,cAA4BkB,EAA5B,GAAkCR,IAAlC,CAAuC,YAAM;AAC3CP,MAAAA,QAAQ,CAACD,KAAK,CAACyB,MAAN,CAAa,UAACP,IAAD;AAAA,eAAUA,IAAI,CAACF,EAAL,KAAYA,EAAtB;AAAA,OAAb,CAAD,CAAR;AACD,KAFD;AAGD,GAJD;;AAMA,MAAMU,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBvB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAKA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACsB,GAAN,CAAU;AAAA,QAAGN,EAAH,SAAGA,EAAH;AAAA,QAAOW,KAAP,SAAOA,KAAP;AAAA,QAAcC,IAAd,SAAcA,IAAd;AAAA,WACT,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEZ,EAAX;AAAe,MAAA,KAAK,EAAEW,KAAtB;AAA6B,MAAA,EAAE,EAAEX,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,MAAM,EAAE;AAAA,eAAMD,eAAe,CAACC,EAAD,CAArB;AAAA,OADV;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMQ,iBAAiB,CAACR,EAAD,CAAvB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWY,IAAX,CALF,CADS;AAAA,GAAV,CADH,CADF,EAcG1B,WAAW,IACV,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEwB,UAAhB;AAA4B,IAAA,KAAK,EAAEtB,WAAW,CAACuB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,YAAY,EAAER,QAApB;AAA8B,IAAA,WAAW,EAAEf,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfJ,CADF;AAsBD","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Layout } from \"../components/Layout\";\r\nimport { List, PostBody } from \"./styles/PostStyles\";\r\nimport { Buttons } from \"../components/Buttons\";\r\nimport { Card } from \"../components/Card\";\r\nimport { Modal } from \"../components/Modal\";\r\nimport { Form } from \"../components/Form\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from \"../utils/constants\";\r\n\r\n\r\n\r\nexport default function Index() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentPost, setCurrentPost] = useState(null);\r\n  \r\n  const getPosts = async () => {\r\n    return await axios\r\n    .get(BASE_URL);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts().then(({ data }) => {\r\n      const postList = data.reverse();\r\n      console.log(postList);\r\n      setPosts(postList);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n    .finally(function () {});\r\n  }, []);\r\n\r\n  const handleClickEdit = (id) => {\r\n    setIsModalOpen(true);\r\n    setCurrentPost(posts.find((post) => post.id === id));\r\n  };\r\n\r\n  const editPost = (post) => {\r\n    axios({\r\n      method: 'PUT',\r\n      url: `${BASE_URL}/${currentPost.id}`,\r\n      data: post,\r\n    }).then(() => {\r\n      setPosts(posts.map(item => {\r\n        if(item.id === post.id){\r\n          return post;\r\n        }\r\n\r\n        return item;\r\n      }));\r\n      setIsModalOpen(false);\r\n      setCurrentPost(null);\r\n    });\r\n  };\r\n\r\n  const handleClickDelete = (id) => {\r\n    axios.delete(`${BASE_URL}/${id}`).then(() => {\r\n      setPosts(posts.filter((post) => post.id !== id));\r\n    });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  \r\n  return (\r\n    <Layout>\r\n      <List>\r\n        {posts.map(({ id, title, body }) => (\r\n          <Card key={id} title={title} id={id}>\r\n            <Buttons\r\n              onEdit={() => handleClickEdit(id)}\r\n              onDelete={() => handleClickDelete(id)}\r\n            />\r\n            <PostBody>{body}</PostBody>\r\n          </Card>\r\n        ))}\r\n      {/*    <Card key={`${post.id}-${post.title} `} title={post.title} id={post.id} isLink>*/}\r\n      </List>\r\n    \r\n      {isModalOpen && (\r\n        <Modal onClose={closeModal} title={currentPost.title}>\r\n          <Form onSubmitForm={editPost} currentPost={currentPost}/>\r\n        </Modal>\r\n      )}\r\n    </Layout>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}