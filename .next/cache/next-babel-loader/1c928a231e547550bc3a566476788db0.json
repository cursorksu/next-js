{"ast":null,"code":"var _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\components\\\\Card\\\\Card.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PostLink from 'next/link';\nimport { ItemWrapper, Item, Title } from \"./CardStyles\";\nexport const Card = ({\n  title,\n  isLink,\n  id,\n  children\n}) => __jsx(Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, __jsx(ItemWrapper, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }\n}, isLink ? __jsx(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 15\n  }\n}, __jsx(PostLink, {\n  href: id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 19\n  }\n})) : __jsx(Title, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 14\n  }\n}, title), children));","map":{"version":3,"sources":["F:/TestTasks/next-js/components/Card/Card.tsx"],"names":["React","PostLink","ItemWrapper","Item","Title","Card","title","isLink","id","children"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAyC,cAAzC;AASA,OAAO,MAAMC,IAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,EAAjB;AAAqBC,EAAAA;AAArB,CAAD,KAC7B,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,MAAM,GAEH,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,QAAD;AAAU,EAAA,IAAI,EAAEC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAFG,GAYJ,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAQF,KAAR,CAbP,EAeMG,QAfN,CADJ,CADK","sourcesContent":["import React, { FC } from 'react';\nimport PostLink from 'next/link';\nimport { ItemWrapper, Item, Title } from \"./CardStyles\";\n\ninterface Props {\n  title?: string;\n  children?: any;\n  isLink: boolean;\n  id?: any;\n}\n\nexport const Card: FC<Props> = ({ title, isLink, id, children}) => (\n  <Item>\n      <ItemWrapper>\n          {isLink\n          ?\n              <Title>\n                  <PostLink href={id}/>\n                  {/*{*/}\n                  {/*    // @ts-ignore*/}\n                  {/*<PostLink id={id ? id.toString() : '0'}>*/}\n                  {/*    <a title={title}>{title}</a>*/}\n                  {/*</PostLink>*/}\n                  {/*}*/}\n             </Title>\n          :\n             <Title>{title}</Title>\n          }\n          { children }\n    </ItemWrapper>\n  </Item>\n);\n"]},"metadata":{},"sourceType":"module"}