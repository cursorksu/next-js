{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\components\\\\Card\\\\Card.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { ItemWrapper, Item, Title } from \"./CardStyles\";\nimport Link from 'next/link';\nexport var Card = function Card(_ref) {\n  var title = _ref.title,\n      isLink = _ref.isLink,\n      children = _ref.children;\n  return __jsx(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(ItemWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, isLink ? __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, __jsx(Link, {\n    href: \"/post?title=\".concat(title),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    title: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }\n  }, title))) : __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, title), __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/post?title=\".concat(title),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    title: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }, title))), children));\n};","map":{"version":3,"sources":["F:/TestTasks/next-js/components/Card/Card.tsx"],"names":["React","ItemWrapper","Item","Title","Link","Card","title","isLink","children"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAwB,OAAxB;AACA,SAAqBC,WAArB,EAAkCC,IAAlC,EAAwCC,KAAxC,QAAqD,cAArD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAQA,OAAO,IAAMC,IAAe,GAAG,SAAlBA,IAAkB,OAAiC;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5D,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,MAAM,GAEC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,wBAAiBD,KAAjB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAGA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBA,KAArB,CADJ,CADJ,CAFD,GAQC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMA,KADN,CATZ,EAaI,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,wBAAiBA,KAAjB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAGA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBA,KAArB,CADJ,CADJ,CAbJ,EAkBME,QAlBN,CADJ,CADJ;AAwBH,CAzBM","sourcesContent":["import React, {FC} from 'react';\r\nimport { BtnWrapper, ItemWrapper, Item, Title } from \"./CardStyles\";\r\nimport Link from 'next/link';\r\n\r\ninterface Props {\r\n    title?: string;\r\n    children?: any;\r\n    isLink?: boolean;\r\n}\r\n\r\nexport const Card: FC<Props> = ({ title, isLink, children }) => {\r\n    return (\r\n        <Item>\r\n            <ItemWrapper>\r\n                {isLink\r\n                    ?\r\n                        <Title>\r\n                            <Link href={`/post?title=${title}`}>\r\n                                <a title={ title} >{ title }</a>\r\n                            </Link>\r\n                        </Title>\r\n                    :\r\n                        <Title>\r\n                            { title }\r\n                        </Title>\r\n                    }\r\n                <Title>\r\n                    <Link href={`/post?title=${title}`}>\r\n                        <a title={ title} >{ title }</a>\r\n                    </Link>\r\n                </Title>\r\n                { children }\r\n            </ItemWrapper>\r\n        </Item>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}