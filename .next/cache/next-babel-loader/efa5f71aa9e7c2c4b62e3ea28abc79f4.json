{"ast":null,"code":"var _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\pages\\\\new.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport axios from 'axios';\nimport { Layout } from '../components/Layout';\nimport { s } from './styles/PostStyles';\nconst BASE_URL = 'https://simple-blog-api.crew.red/posts';\nexport default function New() {\n  const {\n    0: post,\n    1: setPost\n  } = useState({\n    id: 0,\n    title: '',\n    body: ''\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n\n  const handleSubmitCreate = async e => {\n    e.preventDefault();\n\n    if (!post.title || !post.body) {\n      setError('Why do you want to send an empty post? Write something!');\n      return;\n    }\n\n    await axios({\n      method: 'post',\n      url: `${BASE_URL}`,\n      data: post\n    });\n    setPost({\n      id: 0,\n      title: '',\n      body: ''\n    });\n  };\n\n  const handleTitle = event => {\n    const id = v4().substring(0, 6);\n    setError('');\n    setPost(_objectSpread({}, post, {\n      id: id,\n      title: event.target.value\n    }));\n  };\n\n  const handleBody = event => {\n    setError('');\n    setPost(_objectSpread({}, post, {\n      body: event.target.value\n    }));\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(s.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, \"Create new post now.\"), __jsx(s.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(s.ItemWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    action: \"#\",\n    onSubmit: handleSubmitCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, error && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 35\n    }\n  }, error), __jsx(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Input Title of Post\",\n    id: \"title\",\n    type: \"text\",\n    value: post.title,\n    onChange: handleTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, __jsx(\"textarea\", {\n    placeholder: \"Input Body of Post\",\n    id: \"body\",\n    value: post.body,\n    onChange: handleBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Create post\")))));\n}","map":{"version":3,"sources":["F:/TestTasks/next-js/pages/new.tsx"],"names":["React","useState","v4","axios","Layout","s","BASE_URL","New","post","setPost","id","title","body","error","setError","handleSubmitCreate","e","preventDefault","method","url","data","handleTitle","event","substring","target","value","handleBody"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport { Layout  } from '../components/Layout';\r\nimport { s } from './styles/PostStyles';\r\n\r\nconst BASE_URL ='https://simple-blog-api.crew.red/posts';\r\n\r\nexport default function New() {\r\n    const[post, setPost] = useState({ id: 0, title: '', body: ''})\r\n    const[error, setError] = useState('')\r\n\r\n    const handleSubmitCreate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!post.title || !post.body) {\r\n            setError('Why do you want to send an empty post? Write something!');\r\n            return;\r\n        }\r\n\r\n        await axios({\r\n            method: 'post',\r\n            url: `${BASE_URL}`,\r\n            data: post,\r\n        });\r\n\r\n        setPost({ id: 0, title: '', body: ''});\r\n    };\r\n\r\n    const handleTitle = (event) => {\r\n        const id = v4().substring(0, 6);\r\n        setError('');\r\n        setPost({\r\n            ...post,\r\n            id: id,\r\n            title: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleBody = (event) => {\r\n        setError('');\r\n        setPost({\r\n            ...post,\r\n            body: event.target.value,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n           <s.Title>Create new post now.</s.Title>\r\n            <s.Item>\r\n                <s.ItemWrapper>\r\n                    <form action=\"#\" onSubmit={handleSubmitCreate}>\r\n                        {error && <p>{error}</p>}\r\n                        <label htmlFor=\"title\">\r\n                            <input\r\n                                placeholder=\"Input Title of Post\"\r\n                                id=\"title\"\r\n                                type=\"text\"\r\n                                value={post.title}\r\n                                onChange={handleTitle}\r\n                            />\r\n                        </label>\r\n                        <label htmlFor=\"body\">\r\n                            <textarea\r\n                                placeholder=\"Input Body of Post\"\r\n                                id=\"body\"\r\n                                value={post.body}\r\n                                onChange={handleBody}\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\">Create post</button>\r\n                    </form>\r\n                </s.ItemWrapper>\r\n            </s.Item>\r\n        </Layout>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}