{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { List, PostBody } from './PostListStyles';\nimport { Card } from '../Card';\nimport { Modal } from '../Modal';\nimport { Form } from '../Form';\nimport { Buttons } from '../Buttons';\nimport { BASE_URL } from '../../utils/constants';\nexport const PostList = ({\n  postList\n}) => {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postList);\n  const {\n    0: isModalOpen,\n    1: setIsModalOpen\n  } = useState(false);\n  const {\n    0: currentPost,\n    1: setCurrentPost\n  } = useState(null);\n\n  const deletePost = async id => {\n    await axios.delete(`https://simple-blog-api.crew.red/posts/${id}`);\n    await axios.get(BASE_URL).then(({\n      data\n    }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const handleClickDelete = id => {\n    deletePost(id).then(() => {\n      setPosts(posts.filter(post => post.id !== id));\n    });\n  };\n\n  const handleClickEdit = id => {\n    setIsModalOpen(true);\n    setCurrentPost(postList.find(post => post.id === id));\n  };\n\n  const editPost = async post => {\n    await axios({\n      method: 'PUT',\n      url: `${BASE_URL}/${currentPost.id}`,\n      data: post\n    }).then(() => {\n      setIsModalOpen(false);\n      setCurrentPost(null);\n    });\n    await axios.get(BASE_URL).then(({\n      data\n    }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(List, null, posts.map(({\n    id,\n    title,\n    body\n  }) => __jsx(Card, {\n    key: id,\n    title: title,\n    id: id\n  }, __jsx(Buttons, {\n    onEdit: () => handleClickEdit(id),\n    onDelete: () => handleClickDelete(id)\n  }), __jsx(PostBody, null, body)))), isModalOpen && __jsx(Modal, {\n    onClose: closeModal,\n    title: currentPost.title\n  }, __jsx(Form, {\n    onSubmitForm: editPost,\n    currentPost: currentPost\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}