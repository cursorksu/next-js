{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\TestTasks\\\\next-js\\\\components\\\\PostList\\\\PostList.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { List, PostBody } from './PostListStyles';\nimport { Card } from '../Card';\nimport { Modal } from '../Modal';\nimport { Form } from '../Form';\nimport { Buttons } from '../Buttons';\nimport { BASE_URL } from '../../utils/constants';\nexport var PostList = function PostList(_ref) {\n  var postList = _ref.postList;\n\n  var _useState = useState(postList),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      isModalOpen = _useState2[0],\n      setIsModalOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentPost = _useState3[0],\n      setCurrentPost = _useState3[1];\n\n  var handleClickDelete = function handleClickDelete(id) {\n    return _regeneratorRuntime.async(function handleClickDelete$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios[\"delete\"](\"https://simple-blog-api.crew.red/posts/\".concat(id)));\n\n          case 2:\n            setPosts(posts.filter(function (post) {\n              return post.id !== id;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleClickEdit = function handleClickEdit(id) {\n    setIsModalOpen(true);\n    setCurrentPost(postList.find(function (post) {\n      return post.id === id;\n    }));\n  };\n\n  var editPost = function editPost(post) {\n    return _regeneratorRuntime.async(function editPost$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              method: 'PUT',\n              url: \"\".concat(BASE_URL, \"/\").concat(currentPost.id),\n              data: post\n            }).then(function () {\n              setIsModalOpen(false);\n              setCurrentPost(null);\n            }));\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(BASE_URL).then(function (_ref2) {\n              var data = _ref2.data;\n              setPosts(data.reverse());\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var closeModal = function closeModal() {\n    setIsModalOpen(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, posts.map(function (_ref3) {\n    var id = _ref3.id,\n        title = _ref3.title,\n        body = _ref3.body;\n    return __jsx(Card, {\n      key: id,\n      title: title,\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, __jsx(Buttons, {\n      onEdit: function onEdit() {\n        return handleClickEdit(id);\n      },\n      onDelete: function onDelete() {\n        return handleClickDelete(id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }), __jsx(PostBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, body));\n  })), isModalOpen && __jsx(Modal, {\n    onClose: closeModal,\n    title: currentPost.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmitForm: editPost,\n    currentPost: currentPost,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["F:/TestTasks/next-js/components/PostList/PostList.tsx"],"names":["React","useState","axios","List","PostBody","Card","Modal","Form","Buttons","BASE_URL","PostList","postList","posts","setPosts","isModalOpen","setIsModalOpen","currentPost","setCurrentPost","handleClickDelete","id","filter","post","handleClickEdit","find","editPost","method","url","data","then","get","reverse","closeModal","map","title","body"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACdV,QAAQ,CAACU,QAAD,CADM;AAAA,MACjCC,KADiC;AAAA,MAC1BC,QAD0B;;AAAA,mBAEFZ,QAAQ,CAAC,KAAD,CAFN;AAAA,MAEjCa,WAFiC;AAAA,MAEpBC,cAFoB;;AAAA,mBAGFd,QAAQ,CAAC,IAAD,CAHN;AAAA,MAGjCe,WAHiC;AAAA,MAGpBC,cAHoB;;AAKxC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAClBjB,KAAK,UAAL,kDAAuDiB,EAAvD,EADkB;;AAAA;AAGxBN,YAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAa,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACF,EAAL,KAAYA,EAAtB;AAAA,aAAb,CAAD,CAAR;;AAHwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAMA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACH,EAAD,EAAyB;AAC/CJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,cAAc,CAACN,QAAQ,CAACY,IAAT,CAAc,UAACF,IAAD;AAAA,aAAUA,IAAI,CAACF,EAAL,KAAYA,EAAtB;AAAA,KAAd,CAAD,CAAd;AACD,GAHD;;AAKA,MAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAOH,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTnB,KAAK,CAAC;AACVuB,cAAAA,MAAM,EAAE,KADE;AAEVC,cAAAA,GAAG,YAAKjB,QAAL,cAAiBO,WAAW,CAACG,EAA7B,CAFO;AAGVQ,cAAAA,IAAI,EAAEN;AAHI,aAAD,CAAL,CAIHO,IAJG,CAIE,YAAM;AACZb,cAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,cAAAA,cAAc,CAAC,IAAD,CAAd;AACD,aAPK,CADS;;AAAA;AAAA;AAAA,6CAUTf,KAAK,CAAC2B,GAAN,CAAUpB,QAAV,EAAoBmB,IAApB,CAAyB,iBAAc;AAAA,kBAAXD,IAAW,SAAXA,IAAW;AAC3Cd,cAAAA,QAAQ,CAACc,IAAI,CAACG,OAAL,EAAD,CAAR;AACD,aAFK,CAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAeA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBhB,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAIA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACoB,GAAN,CAAU;AAAA,QAAGb,EAAH,SAAGA,EAAH;AAAA,QAAOc,KAAP,SAAOA,KAAP;AAAA,QAAcC,IAAd,SAAcA,IAAd;AAAA,WACT,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEf,EAAX;AAAe,MAAA,KAAK,EAAEc,KAAtB;AAA6B,MAAA,EAAE,EAAEd,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,MAAM,EAAE;AAAA,eAAMG,eAAe,CAACH,EAAD,CAArB;AAAA,OADV;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMD,iBAAiB,CAACC,EAAD,CAAvB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWe,IAAX,CALF,CADS;AAAA,GAAV,CADH,CADF,EAYGpB,WAAW,IACV,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEiB,UAAhB;AAA4B,IAAA,KAAK,EAAEf,WAAW,CAACiB,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,YAAY,EAAET,QAApB;AAA8B,IAAA,WAAW,EAAER,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbJ,CADF;AAoBD,CAvDM","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { List, PostBody } from './PostListStyles';\nimport { Card } from '../Card';\nimport { Modal } from '../Modal';\nimport { Form } from '../Form';\nimport { Buttons } from '../Buttons';\nimport { BASE_URL } from '../../utils/constants';\n\nexport const PostList = ({ postList }) => {\n  const [posts, setPosts] = useState(postList);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentPost, setCurrentPost] = useState(null);\n\n  const handleClickDelete = async (id) => {\n    await axios.delete(`https://simple-blog-api.crew.red/posts/${id}`);\n\n    setPosts(posts.filter((post) => post.id !== id));\n  };\n\n  const handleClickEdit = (id: string | number) => {\n    setIsModalOpen(true);\n    setCurrentPost(postList.find((post) => post.id === id));\n  };\n\n  const editPost = async (post) => {\n    await axios({\n      method: 'PUT',\n      url: `${BASE_URL}/${currentPost.id}`,\n      data: post,\n    }).then(() => {\n      setIsModalOpen(false);\n      setCurrentPost(null);\n    });\n\n    await axios.get(BASE_URL).then(({ data }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <List>\n        {posts.map(({ id, title, body }) => (\n          <Card key={id} title={title} id={id}>\n            <Buttons\n              onEdit={() => handleClickEdit(id)}\n              onDelete={() => handleClickDelete(id)}\n            />\n            <PostBody>{body}</PostBody>\n          </Card>\n        ))}\n      </List>\n      {isModalOpen && (\n        <Modal onClose={closeModal} title={currentPost.title}>\n          <Form onSubmitForm={editPost} currentPost={currentPost} />\n        </Modal>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}