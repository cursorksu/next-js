{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport { Label, Input, Textarea, Button, ErrorMess } from './FormStyles';\nexport var Form = function Form(_ref) {\n  var onSubmitForm = _ref.onSubmitForm,\n      currentPost = _ref.currentPost;\n\n  var _useState = useState(currentPost || {\n    id: '',\n    title: '',\n    body: ''\n  }),\n      post = _useState[0],\n      setPost = _useState[1];\n\n  var _useState2 = useState(''),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleSubmitCreate = function handleSubmitCreate(e) {\n    e.preventDefault();\n\n    if (!post.title || !post.body) {\n      setError('Why do you want to send an empty posts? Write something!');\n      return;\n    }\n\n    var preparedPost = _objectSpread({}, post, {\n      title: post.title.trim(),\n      body: post.body.trim()\n    });\n\n    onSubmitForm(preparedPost);\n    setPost({\n      id: '',\n      title: '',\n      body: ''\n    });\n  };\n\n  var handleTitle = function handleTitle(event) {\n    var id = v4().substring(0, 6);\n    setError('');\n    setPost(_objectSpread({}, post, {\n      id: id,\n      title: event.target.value\n    }));\n  };\n\n  var handleBody = function handleBody(event) {\n    setError('');\n    setPost(_objectSpread({}, post, {\n      body: event.target.value\n    }));\n  };\n\n  return __jsx(\"form\", {\n    action: \"#\",\n    onSubmit: handleSubmitCreate\n  }, error && __jsx(ErrorMess, null, error), __jsx(Label, {\n    htmlFor: \"title\"\n  }, __jsx(\"p\", null, \"Post`s title\"), __jsx(Input, {\n    placeholder: \"Input Title of Post\",\n    id: \"title\",\n    type: \"text\",\n    value: post.title,\n    onChange: handleTitle\n  })), __jsx(Label, {\n    htmlFor: \"body\"\n  }, __jsx(\"p\", null, \"Post`s text\"), __jsx(Textarea, {\n    placeholder: \"Input Body of Post\",\n    id: \"body\",\n    value: post.body,\n    onChange: handleBody\n  })), __jsx(Button, {\n    type: \"submit\"\n  }, currentPost ? 'Edit posts' : 'Create posts'));\n};","map":null,"metadata":{},"sourceType":"module"}