{"version":3,"file":"static/webpack/static\\development\\pages\\posts.js.4dacf6a5a1d6cde146ea.hot-update.js","sources":["webpack:///./pages/PostStyles.ts","webpack:///./pages/posts.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const s = {\r\n    Body: styled.body `\r\n        background: white;\r\n        padding: 20px;\r\n        box-shadow: 0 0 70px rgba(0, 0, 0, 0.1) inset;\r\n    `,\r\n\r\n    Item: styled.div `\r\n        max-width: 100%;\r\n        position: relative;\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n    \r\n    &:after,\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 18px;\r\n        left: 5px;\r\n        width: 50%;\r\n        height: 30px;\r\n        z-index: 0;\r\n        max-width: 300px;\r\n        box-shadow: 0 20px 5px rgba(0, 0, 0, 0.3);\r\n        transform: rotate(-3deg);\r\n        }\r\n        \r\n    &:after {\r\n        right: 5px;\r\n        left: auto;\r\n        transform: rotate(3deg);\r\n        }\r\n`,\r\n\r\n    ItemWrapper: styled.div `\r\n        box-sizing: border-box;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: white;\r\n        padding: 20px;\r\n        box-shadow: 0 0 70px rgba(0, 0, 0, 0.1) inset;\r\n        position: relative;\r\n        z-index: 1;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    `,\r\n\r\n    List: styled.div `\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-gap: 40px;\r\n    `,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios  from 'axios';\r\nimport { Layout } from '../components/Layout'\r\nimport { s } from'./PostStyles';\r\n\r\nconst BASE_URL ='https://simple-blog-api.crew.red/posts'\r\n\r\nexport default function Posts() {\r\n    const [ posts, setPosts ] = useState ([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(BASE_URL)\r\n            .then(function (response) {\r\n                const postList = response.data.reverse();\r\n                setPosts(postList);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n            .finally(function () {\r\n\r\n            });\r\n    }, []);\r\n\r\n    const handleClickEdit = (id) => {\r\n        console.log(id)\r\n    };\r\n\r\n    const handleClickDelete = (id) => {\r\n        axios.delete(`${BASE_URL}/${id}`);\r\n        setPosts(posts.filter(post => post.id !== id));\r\n    };\r\n\r\n    return (\r\n        <Body>\r\n            <Layout>\r\n                <s.List>\r\n                    {posts.map(post => (\r\n                        <s.Item key={`${post.id}-${post.title} `}>\r\n                            <s.ItemWrapper className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <a title={post.title} className=\"card-title\">{`#${post.id} ${post.title}`}</a>\r\n                                    <button type=\"button\" onClick={handleClickEdit}className=\"btn-edit\">\r\n                                        Edit\r\n                                    </button>\r\n                                    <button type=\"button\" onClick={() => handleClickDelete(post.id)}className=\"btn-delete\">\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"card-body\">{post.body}</div>\r\n                            </s.ItemWrapper>\r\n                        </s.Item>\r\n                    ))}\r\n                </s.List>\r\n            </Layout>\r\n        </Body>\r\n    );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAMA;AA2BA;AAaA;AA/CA;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAoBA;;;;A","sourceRoot":""}