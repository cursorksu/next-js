{"version":3,"file":"static/webpack/static\\development\\pages\\new.js.6cbb1211e1f400ffcf3c.hot-update.js","sources":["webpack:///./components/Modal/Modal.tsx","webpack:///./components/Modal/ModalStyles.ts","webpack:///./pages/new.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\nimport { modal } from './ModalStyles';\r\n\r\nexport const Modal = ({ onClose, title }) => {\r\n    const router = useRouter();\r\n    const handleClose = () => {\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <modal.Backdrop>\r\n            <modal.Wrapper>\r\n                <modal.BtnClose type=\"button\" onClick={handleClose}>Close</modal.BtnClose>\r\n                <modal.Content>\r\n                    <p>Success!!!</p>\r\n                    <p>{title} was added!</p>\r\n                </modal.Content>\r\n            </modal.Wrapper>\r\n        </modal.Backdrop>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const modal = {\r\n    Backdrop: styled.div `\r\n        margin: 0;\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n        color: #888;\r\n        text-align: left;\r\n        background-color: #f3969a;\r\n        position: sticky;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        z-index: 2;\r\n        width: 100%;\r\n        margin-bottom: 40px;\r\n`,\r\n    Wrapper: styled.ul`\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-left: 0;\r\n        margin: 15px 0;\r\n        list-style: none;\r\n    `,\r\n    Content: styled.li`\r\n        transition: background-color 0.3s ease-in-out;\r\n        margin: 0 12px;\r\n        \r\n        &:hover {\r\n            background: rgba(255,255,255,0.3);\r\n        }\r\n        \r\n        &.active {\r\n            background: #fff;\r\n            & a {\r\n                color:  #f3969a;\r\n            }\r\n        }\r\n    `,\r\n    BtnClose: styled.a`\r\n        display: block;\r\n        padding: 0.5rem 1rem;\r\n        color: #fff;\r\n        text-decoration: none;\r\n        background-color: transparent;\r\n    `,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport { Modal  } from '../components/Modal';\r\nimport { Layout  } from '../components/Layout';\r\nimport { card, errorMess, newPost } from './styles/PostStyles';\r\n\r\nconst BASE_URL ='https://simple-blog-api.crew.red/posts';\r\n\r\nexport default function New() {\r\n    const[post, setPost] = useState({ id: 0, title: '', body: ''});\r\n    const[error, setError] = useState('');\r\n    const[isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    const handleSubmitCreate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!post.title || !post.body) {\r\n            setError('Why do you want to send an empty post? Write something!');\r\n            return;\r\n        }\r\n\r\n        await axios({\r\n            method: 'post',\r\n            url: `${BASE_URL}`,\r\n            data: post,\r\n        });\r\n\r\n        setPost({ id: 0, title: '', body: ''});\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleTitle = (event) => {\r\n        const id = v4().substring(0, 6);\r\n        setError('');\r\n        setPost({\r\n            ...post,\r\n            id: id,\r\n            title: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleBody = (event) => {\r\n        setError('');\r\n        setPost({\r\n            ...post,\r\n            body: event.target.value,\r\n        });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n           <card.Title>Create new post now!</card.Title>\r\n            <card.Item>\r\n                <card.ItemWrapper>\r\n                    <form action=\"#\" onSubmit={handleSubmitCreate}>\r\n                        {error && <errorMess.TitleError>{error}</errorMess.TitleError>}\r\n                        <newPost.Label htmlFor=\"title\">\r\n                            <p>Post`s title</p>\r\n                            <newPost.Input\r\n                                placeholder=\"Input Title of Post\"\r\n                                id=\"title\"\r\n                                type=\"text\"\r\n                                value={post.title}\r\n                                onChange={handleTitle}\r\n                            />\r\n                        </newPost.Label>\r\n                        <newPost.Label htmlFor=\"body\">\r\n                            <p>Post`s text</p>\r\n                            <newPost.Textarea\r\n                                placeholder=\"Input Body of Post\"\r\n                                id=\"body\"\r\n                                value={post.body}\r\n                                onChange={handleBody}\r\n                            />\r\n                        </newPost.Label>\r\n                        <newPost.Button type=\"submit\">Create post</newPost.Button>\r\n                    </form>\r\n                </card.ItemWrapper>\r\n            </card.Item>\r\n\r\n            {isModalOpen && <Modal onClose={closeModal} title={post.title}/>}\r\n        </Layout>\r\n    );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AAEA;AACA;AAgBA;AAOA;AAeA;AAvCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AAJA;AACA;AADA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AACA;AATA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}