{"version":3,"file":"static/webpack/static\\development\\pages\\new.js.929409299d4e115dae6b.hot-update.js","sources":["webpack:///./pages/new.tsx","webpack:///./pages/styles/PostStyles.ts"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { v4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport { Layout  } from '../components/Layout';\r\nimport { card, error } from './styles/PostStyles';\r\n\r\nconst BASE_URL ='https://simple-blog-api.crew.red/posts';\r\n\r\nexport default function New() {\r\n    const[post, setPost] = useState({ id: 0, title: '', body: ''})\r\n    const[error, setError] = useState('')\r\n\r\n    const handleSubmitCreate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!post.title || !post.body) {\r\n            setError('Why do you want to send an empty post? Write something!');\r\n            return;\r\n        }\r\n\r\n        await axios({\r\n            method: 'post',\r\n            url: `${BASE_URL}`,\r\n            data: post,\r\n        });\r\n\r\n        setPost({ id: 0, title: '', body: ''});\r\n    };\r\n\r\n    const handleTitle = (event) => {\r\n        const id = v4().substring(0, 6);\r\n        setError('');\r\n        setPost({\r\n            ...post,\r\n            id: id,\r\n            title: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleBody = (event) => {\r\n        setError('');\r\n        setPost({\r\n            ...post,\r\n            body: event.target.value,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n           <card.Title>Create new post now!</card.Title>\r\n            <card.Item>\r\n                <card.ItemWrapper>\r\n                    <form action=\"#\" onSubmit={handleSubmitCreate}>\r\n                        {error && <error.TitleError>{error && console.log(error.TitleError)}</error.TitleError>}\r\n                        <label htmlFor=\"title\">\r\n                            <input\r\n                                placeholder=\"Input Title of Post\"\r\n                                id=\"title\"\r\n                                type=\"text\"\r\n                                value={post.title}\r\n                                onChange={handleTitle}\r\n                            />\r\n                        </label>\r\n                        <label htmlFor=\"body\">\r\n                            <textarea\r\n                                placeholder=\"Input Body of Post\"\r\n                                id=\"body\"\r\n                                value={post.body}\r\n                                onChange={handleBody}\r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\">Create post</button>\r\n                    </form>\r\n                </card.ItemWrapper>\r\n            </card.Item>\r\n        </Layout>\r\n    );\r\n}","\r\nimport styled from 'styled-components';\r\n\r\nexport const card = {\r\n    Item: styled.div `\r\n        max-width: 100%;\r\n        position: relative;\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n    \r\n    &:after,\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        bottom: 18px;\r\n        left: 5px;\r\n        width: 50%;\r\n        height: 30px;\r\n        z-index: 0;\r\n        max-width: 300px;\r\n        box-shadow: 0 20px 5px rgba(0, 0, 0, 0.3);\r\n        transform: rotate(-3deg);\r\n        }\r\n        \r\n    &:after {\r\n        right: 5px;\r\n        left: auto;\r\n        transform: rotate(3deg);\r\n        }\r\n    `,\r\n\r\n    ItemWrapper: styled.div `\r\n        box-sizing: border-box;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: white;\r\n        padding: 20px;\r\n        box-shadow: 0 0 70px rgba(0, 0, 0, 0.1) inset;\r\n        position: relative;\r\n        z-index: 1;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    `,\r\n\r\n    List: styled.div `\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 500px);\r\n        grid-gap: 20px;\r\n    `,\r\n\r\n    PostBody: styled.p `\r\n        font-family: 'Raleway', sans-serif;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n    `,\r\n\r\n    Title: styled.h2 `\r\n        font-family: \"Comfortaa\",sans-serif;\r\n        text-align: center;\r\n        line-height: 1.2;\r\n        color: #f3969a;\r\n        font-size: 20px;\r\n        font-weight: 700;\r\n        padding-bottom: 10px;\r\n        position: relative;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        \r\n        &:before {\r\n            content: '';\r\n            width: 100%;\r\n            position: absolute;\r\n            height: 1px;\r\n            background: linear-gradient(to right, rgba(255,255,255,0) 0%,rgba(243, 150, 154,1) 49%, rgba(255,255,255,0) 100%);\r\n            bottom: 0px;\r\n            left: 0;\r\n            right: 0;\r\n            z-index: 1;\r\n        }\r\n    `,\r\n};\r\n\r\nexport const error = {\r\n    TitleError: styled(card.Title) `\r\n        font-size: 14px;\r\n    `,\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AAJA;AACA;AADA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AACA;AATA;AAcA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;AA2BA;AAaA;AAMA;AAMA;AArDA;AA+EA;AACA;AADA;;;;A","sourceRoot":""}