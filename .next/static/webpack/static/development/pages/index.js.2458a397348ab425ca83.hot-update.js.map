{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2458a397348ab425ca83.hot-update.js","sources":["webpack:///./components/PostList/PostList.tsx","webpack:///./components/PostList/index.ts","webpack:///./pages/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { NextPage } from 'next';\nimport { List, PostBody } from './PostListStyles';\nimport { Card } from '../Card';\nimport { Modal } from '../Modal';\nimport { Form } from '../Form';\nimport { Buttons } from '../Buttons';\nimport { BASE_URL } from '../../utils/constants';\n\ninterface Props {\n  postList: Post[];\n}\n\nexport const PostList: NextPage<Props> = ({ postList }) => {\n  const [posts, setPosts] = useState(postList);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentPost, setCurrentPost] = useState(null);\n\n  const deletePost = async (id): Promise<void> => {\n    await axios.delete(`https://simple-blog-api.crew.red/posts/${id}`);\n\n    await axios.get(BASE_URL).then(({ data }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const handleClickDelete = (id: string | number): void => {\n    deletePost();\n    setPosts(posts.filter((post) => post.id !== id));\n  };\n\n  const handleClickEdit = (id: string | number): void => {\n    setIsModalOpen(true);\n    setCurrentPost(postList.find((post) => post.id === id));\n  };\n\n  const editPost = async (post): Promise<void> => {\n    await axios({\n      method: 'PUT',\n      url: `${BASE_URL}/${currentPost.id}`,\n      data: post,\n    }).then(() => {\n      setIsModalOpen(false);\n      setCurrentPost(null);\n    });\n\n    await axios.get(BASE_URL).then(({ data }) => {\n      setPosts(data.reverse());\n    });\n  };\n\n  const closeModal = (): void => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <List>\n        {posts.map(({ id, title, body }) => (\n          <Card key={id} title={title} id={id}>\n            <Buttons\n              onEdit={(): void => handleClickEdit(id)}\n              onDelete={(): Promise<void> => handleClickDelete(id)}\n            />\n            <PostBody>{body}</PostBody>\n          </Card>\n        ))}\n      </List>\n      {isModalOpen && (\n        <Modal onClose={closeModal} title={currentPost.title}>\n          <Form onSubmitForm={editPost} currentPost={currentPost} />\n        </Modal>\n      )}\n    </>\n  );\n};\n","export * from './PostList';\n","import React from 'react';\nimport { NextPage } from 'next';\nimport axios from 'axios';\nimport { Layout } from '../components/Layout';\nimport { PostList } from '../components/PostList';\nimport { BASE_URL } from '../utils/constants';\n\ninterface Props {\n  posts: Post[];\n}\n\nconst Index: NextPage<Props> = ({ posts }) => {\n  return (\n    <Layout>\n      <PostList postList={posts} />\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async function(): Promise<{ posts: Post[] }> {\n  const res = await axios.get(BASE_URL);\n\n  return {\n    posts: res.data.reverse(),\n  };\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAIA;AADA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;;;;A","sourceRoot":""}