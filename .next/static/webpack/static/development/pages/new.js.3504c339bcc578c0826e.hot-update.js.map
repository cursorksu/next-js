{"version":3,"file":"static/webpack/static\\development\\pages\\new.js.3504c339bcc578c0826e.hot-update.js","sources":["webpack:///./components/Form/Form.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {errorMess, newPost} from \"../../pages/styles/PostStyles\";\r\nimport axios from \"axios\";\r\nimport { v4 } from 'uuid';\r\n\r\nexport const Form = ({ onSubmitForm }) => {\r\n    const[post, setPost] = useState({ id: 0, title: '', body: ''});\r\n    const[error, setError] = useState('');\r\n\r\n    const handleSubmitCreate = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!post.title || !post.body) {\r\n            setError('Why do you want to send an empty post? Write something!');\r\n            return;\r\n        }\r\n\r\n        onSubmitForm(post);\r\n        setPost({ id: 0, title: '', body: ''});\r\n    };\r\n\r\n    const handleTitle = (event) => {\r\n        const id = v4().substring(0, 6);\r\n        setError('');\r\n        setPost({\r\n            ...post,\r\n            id: id,\r\n            title: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleBody = (event) => {\r\n        const arrBody = event.target.value.split('   ');\r\n        arrBody.map(item => <p>item</p>).join('')\r\n        console.log(arrBody.map(item => `<p>${item}</p>`).join(''))\r\n        setError('');\r\n        setPost({\r\n            ...post,\r\n            body: event.target.value,\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <form action=\"#\" onSubmit={handleSubmitCreate}>\r\n            {error && <errorMess.TitleError>{error}</errorMess.TitleError>}\r\n            <newPost.Label htmlFor=\"title\">\r\n                <p>Post`s title</p>\r\n                <newPost.Input\r\n                    placeholder=\"Input Title of Post\"\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    value={post.title}\r\n                    onChange={handleTitle}\r\n                />\r\n            </newPost.Label>\r\n            <newPost.Label htmlFor=\"body\">\r\n                <p>Post`s text</p>\r\n                <newPost.Textarea\r\n                    placeholder=\"Input Body of Post\"\r\n                    id=\"body\"\r\n                    value={post.body}\r\n                    onChange={handleBody}\r\n                />\r\n            </newPost.Label>\r\n            <newPost.Button type=\"submit\">Create post</newPost.Button>\r\n        </form>\r\n    );\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AAJA;AACA;AADA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}